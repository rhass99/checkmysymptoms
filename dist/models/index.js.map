{"version":3,"sources":["../../src/models/index.js"],"names":["process","env","NODE_ENV","require","config","basename","path","__filename","DB_URI","DATABASE_DEV_URL","DATABASE_URL","__dirname","db","sequelize","Sequelize","dialect","pool","max","min","idle","sync","forceSync","fs","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate"],"mappings":"AAAA;;;;;;AAIA;;;;AACA;;;;AACA;;;;;;AALA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CC,QAAQ,QAAR,EAAkBC,MAAlB;AAC5C;;AAMA,MAAMC,WAAWC,eAAKD,QAAL,CAAcE,UAAd,CAAjB;AACA,MAAMC,SAASR,QAAQC,GAAR,CAAYQ,gBAAZ,IAAgCT,QAAQC,GAAR,CAAYS,YAA3D;;AAEA,MAAMN,SAASD,QAAQQ,YAAY,2BAApB,CAAf;AACA;AACA,MAAMC,KAAK,EAAX;;AAEA,IAAIC,YAAY,IAAIC,mBAAJ,CAAcN,MAAd,EAAsB;AAClCO,WAAS,UADyB;AAElCC,QAAM;AACFC,SAAK,CADH;AAEFC,SAAK,CAFH;AAGFC,UAAM;AAHJ,GAF4B;AAOlCC,QAAM,IAP4B;AAQlCC,aAAW;AARuB,CAAtB,CAAhB;;AAWAC,aACGC,WADH,CACeZ,SADf,EAEGa,MAFH,CAEUC,QAAQ;AACd,SAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASpB,QAAvC,IAAqDoB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,QAAQ;AACf,QAAMI,QAAQhB,UAAU,QAAV,EAAoBP,eAAKwB,IAAL,CAAUnB,SAAV,EAAqBc,IAArB,CAApB,CAAd;AACAb,KAAGiB,MAAME,IAAT,IAAiBF,KAAjB;AACD,CARH;;AAUAG,OAAOC,IAAP,CAAYrB,EAAZ,EAAgBgB,OAAhB,CAAwBM,aAAa;AACnC,MAAItB,GAAGsB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BvB,OAAGsB,SAAH,EAAcC,SAAd,CAAwBvB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGE,SAAH,GAAeA,mBAAf;;kBAEeF,E","file":"index.js","sourcesContent":["'use strict';\nif (process.env.NODE_ENV === 'development') require('dotenv').config();\n//const env = process.env.NODE_ENV || 'development';\n\nimport fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\n\nconst basename = path.basename(__filename);\nconst DB_URI = process.env.DATABASE_DEV_URL || process.env.DATABASE_URL;\n\nconst config = require(__dirname + '/../../config/config.json');\n//console.log(config);\nconst db = {};\n\nlet sequelize = new Sequelize(DB_URI, {\n    dialect: 'postgres',\n    pool: {\n        max: 5,\n        min: 0,\n        idle: 10000\n    },\n    sync: true,\n    forceSync: false\n});\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;"]}