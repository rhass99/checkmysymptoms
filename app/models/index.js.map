{"version":3,"sources":["../../src/models/index.js"],"names":["process","env","NODE_ENV","require","config","basename","path","__filename","DB_URI","DATABASE_DEV_URL","__dirname","db","DATABASE_URL","sequelize","Sequelize","dialect","protocol","logging","pool","max","min","idle","sync","forceSync","fs","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate"],"mappings":"AAAA;;;;;;AAIA;;;;AACA;;;;AACA;;;;;;AALA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CC,QAAQ,QAAR,EAAkBC,MAAlB;AAC5C;;AAMA,MAAMC,WAAWC,eAAKD,QAAL,CAAcE,UAAd,CAAjB;AACA,MAAMC,SAASR,QAAQC,GAAR,CAAYQ,gBAA3B;;AAEA,MAAML,SAASD,QAAQO,YAAY,wBAApB,CAAf;AACA;AACA,MAAMC,KAAK,EAAX;;AAGA,IAAIX,QAAQC,GAAR,CAAYW,YAAhB,EAA8B;AAC1B;AACA,QAAIC,YAAY,IAAIC,mBAAJ,CAAcd,QAAQC,GAAR,CAAYW,YAA1B,EAAwC;AACpDG,iBAAU,UAD0C;AAEpDC,kBAAU,UAF0C;AAGpDC,iBAAU,IAH0C,CAGrC;AAHqC,KAAxC,CAAhB;AAKH,CAPD,MAOO;AACH;AACIJ,gBAAY,IAAIC,mBAAJ,CAAcN,MAAd,EAAsB;AAClCO,iBAAS,UADyB;AAElCG,cAAM;AACFC,iBAAK,CADH;AAEFC,iBAAK,CAFH;AAGFC,kBAAM;AAHJ,SAF4B;AAOlCC,cAAM,IAP4B;AAQlCC,mBAAW;AARuB,KAAtB,CAAZ;AAWP;;AAGDC,aACGC,WADH,CACef,SADf,EAEGgB,MAFH,CAEUC,QAAQ;AACd,WAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAAStB,QAAvC,IAAqDsB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,QAAQ;AACf,UAAMI,QAAQlB,UAAU,QAAV,EAAoBP,eAAK0B,IAAL,CAAUtB,SAAV,EAAqBiB,IAArB,CAApB,CAAd;AACAhB,OAAGoB,MAAME,IAAT,IAAiBF,KAAjB;AACD,CARH;;AAUAG,OAAOC,IAAP,CAAYxB,EAAZ,EAAgBmB,OAAhB,CAAwBM,aAAa;AACnC,QAAIzB,GAAGyB,SAAH,EAAcC,SAAlB,EAA6B;AAC3B1B,WAAGyB,SAAH,EAAcC,SAAd,CAAwB1B,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGG,SAAH,GAAeA,mBAAf;;kBAEeH,E","file":"index.js","sourcesContent":["'use strict';\nif (process.env.NODE_ENV === 'development') require('dotenv').config();\n//const env = process.env.NODE_ENV || 'development';\n\nimport fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\n\nconst basename = path.basename(__filename);\nconst DB_URI = process.env.DATABASE_DEV_URL;\n\nconst config = require(__dirname + '/../config/config.json');\n//console.log(config);\nconst db = {};\n\n\nif (process.env.DATABASE_URL) {\n    // the application is executed on Heroku ... use the postgres database\n    var sequelize = new Sequelize(process.env.DATABASE_URL, {\n        dialect:  'postgres',\n        protocol: 'postgres',\n        logging:  true //false\n    })\n} else {\n    // the application is executed on the local machine ... use mysql\n        sequelize = new Sequelize(DB_URI, {\n        dialect: 'postgres',\n        pool: {\n            max: 5,\n            min: 0,\n            idle: 10000\n        },\n        sync: true,\n        forceSync: false\n    });\n\n}\n\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;"]}