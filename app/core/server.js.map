{"version":3,"sources":["../../src/core/server.js"],"names":["process","env","NODE_ENV","require","config","app","apiRouter","express","Router","PORT","DB_URI","DATABASE_DEV_URL","DATABASE_URL","db","sequelize","authenticate","then","console","log","catch","get","req","res","send","email","param","model","User","findOne","where","user","json","err"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;;;;;AANA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CC,QAAQ,QAAR,EAAkBC,MAAlB;;AAE5C;AACA;;;AAOA;AACA,MAAMC,MAAM,wBAAZ;AACA;AACA,MAAMC,YAAYC,kBAAQC,MAAR,EAAlB;AACA;AACA,0BAAgBH,GAAhB;;AAGA;AACA,MAAMI,OAAOT,QAAQC,GAAR,CAAYQ,IAAzB;AACA,MAAMC,SAASV,QAAQC,GAAR,CAAYU,gBAAZ,IAAgCX,QAAQC,GAAR,CAAYW,YAA3D;AACA;AACAC,gBAAGC,SAAH,CAAaC,YAAb,GACKC,IADL,CACU,MAAMC,QAAQC,GAAR,CAAa,gBAAeR,MAAO,EAAnC,CADhB,EAEKS,KAFL,CAEW,MAAMF,QAAQC,GAAR,CAAY,eAAZ,CAFjB;;AAKA;AACA;AACAb,IAAIe,GAAJ,CAAQ,kBAAR,EAA4B,CAACC,GAAD,EAAMC,GAAN,KAAcA,IAAIC,IAAJ,CAAU,gBAAevB,QAAQC,GAAR,CAAYC,QAAS,aAAYO,IAAK,uBAAsBC,MAAO,EAA5F,CAA1C;;AAEAL,IAAIe,GAAJ,CAAQ,OAAR,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,QAAIE,QAAQH,IAAII,KAAJ,CAAU,OAAV,CAAZ;AACAR,YAAQC,GAAR,CAAYM,KAAZ;AACAE,oBAAMC,IAAN,CAAWC,OAAX,CAAmB,EAAEC,OAAO,EAACL,OAAOA,KAAR,EAAT,EAAnB,EACKR,IADL,CACWc,IAAD,IAAUR,IAAIS,IAAJ,CAASD,IAAT,CADpB,EAEKX,KAFL,CAEYa,GAAD,IAASf,QAAQC,GAAR,CAAYc,GAAZ,CAFpB;AAGH,CAND;;AASA;kBACe3B,G","file":"server.js","sourcesContent":["if (process.env.NODE_ENV === 'development') require('dotenv').config();\n\n// Import express, middleware, routes, db and model.\n// Need to add logging ??\nimport express from 'express';\nimport setupMiddleware from './middleware';\nimport db from '../models/index'\nimport model from '../models/index';\n\n\n// Declare express app\nconst app = express();\n// Declare express router\nconst apiRouter = express.Router();\n// Declare express body-parser middleware\nsetupMiddleware(app);\n\n\n// Remove this later once connection is finalized\nconst PORT = process.env.PORT;\nconst DB_URI = process.env.DATABASE_DEV_URL || process.env.DATABASE_URL;\n// Start DB - Remove DB_URI reference\ndb.sequelize.authenticate()\n    .then(() => console.log(`Connected to ${DB_URI}`))\n    .catch(() => console.log('Not connected'));\n\n\n// Start the application routes\n// Move routing implementation into routes folder\napp.get('/checkconnection', (req, res) => res.send(`Listening to ${process.env.NODE_ENV} on port: ${PORT} while Connected to ${DB_URI}`));\n\napp.get('/user', (req, res) => {\n    let email = req.param('email');\n    console.log(email);\n    model.User.findOne({ where: {email: email}})\n        .then((user) => res.json(user))\n        .catch((err) => console.log(err));\n});\n\n\n// Export the declared Express app\nexport default app;"]}